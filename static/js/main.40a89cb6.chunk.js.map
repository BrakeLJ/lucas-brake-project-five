{"version":3,"sources":["components/Header.js","components/Search.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Search","handleChange","e","setState","userInput","target","value","state","htmlFor","onChange","this","type","name","id","onClick","props","getHeroes","Component","Footer","href","rel","aria-label","App","preventDefault","axios","method","url","dataResponse","params","nameStartsWith","ts","apikey","hash","limit","then","results","data","heroes","length","alert","map","hero","key","src","thumbnail","path","alt","comics","available","description","urls","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"0TAceA,G,MAZA,WACb,OACE,oCACE,4BAAQC,UAAU,UAChB,yBAAKA,UAAU,WACb,wBAAIA,UAAU,mBAAd,oBCuCKC,E,kDA3Cb,aAAe,IAAD,8BACZ,gBAQFC,aAAe,SAACC,GACd,EAAKC,SAAS,CACdC,UAAWF,EAAEG,OAAOC,SATpB,EAAKC,MAAQ,CACXH,UAAW,IAHD,E,qDAeJ,IAAD,OACP,OACE,oCACE,yBAAKL,UAAU,WACb,kCACE,4BAAQA,UAAU,WAAlB,qBACA,0BAAMA,UAAU,QAChB,2BAAOS,QAAQ,UAAf,qBACA,2BACET,UAAU,cACVU,SAAUC,KAAKT,aACfU,KAAK,SACLC,KAAK,SACLC,GAAG,SACHP,MAAOI,KAAKH,MAAMH,YACpB,4BACEL,UAAU,gBACVe,QAAS,SAACZ,GAAD,OAAO,EAAKa,MAAMC,UAAUd,EAAG,EAAKK,MAAMH,YACnDO,KAAK,UAHP,qB,GA/BSM,aCoCNC,EApCA,WACb,OACE,oCACE,4BAAQnB,UAAU,UAChB,yBAAKA,UAAU,wBACb,0BAAMA,UAAU,gBAAhB,0BACyB,uBAAGoB,KAAK,4BAAR,iBADzB,yBAKA,wBAAIpB,UAAU,WACZ,4BACI,uBAAGoB,KAAK,iCAAiCd,OAAO,SAASe,IAAI,sBAC3DC,aAAW,uBACX,uBAAGtB,UAAU,qBAGnB,4BACI,uBAAGoB,KAAK,6BAA6Bd,OAAO,SAASe,IAAI,sBACvDC,aAAW,uBACX,uBAAGtB,UAAU,oBAGnB,4BACI,uBAAGoB,KAAK,oDAAoDd,OAAO,SAASe,IAAI,sBAC9EC,aAAW,yBACX,uBAAGtB,UAAU,2BC+ChBuB,E,kDA/Db,aAAe,IAAD,8BACZ,gBAOFN,UAAY,SAACd,EAAGE,GACdF,EAAEqB,iBACFC,IAAM,CACJC,OAAQ,MACRC,IAAK,kDACLC,aAAc,OACdC,OAAQ,CACNC,eAAgBzB,EAChB0B,GAAI,WACJC,OAAQ,mCACRC,KAAM,mCACNC,MAAO,OAERC,MAAK,SAAAC,GACFA,EAAUA,EAAQC,KAAKA,KAAKD,QAC5B,EAAKhC,SAAS,CACdkC,OAAQF,IAGsB,IAA9B,EAAK5B,MAAM8B,OAAOC,QACtBC,MAAM,gEA1BR,EAAKhC,MAAQ,CACX8B,OAAQ,IAHE,E,qDAkCZ,OACE,yBAAKtC,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAQiB,UAAWN,KAAKM,YACxB,yBAAKjB,UAAU,WAEb,wBAAIA,UAAU,eACXW,KAAKH,MAAM8B,OAAOG,KAAI,SAACC,GACtB,OACE,wBAAIC,IAAKD,EAAK5B,GAAId,UAAU,qBAC1B,yBAAK4C,IAAG,UAAKF,EAAKG,UAAUC,KAApB,2BAAoDC,IAAI,iBAChE,yBAAK/C,UAAU,yBACb,4BAAK0C,EAAK7B,MACV,0BAAMb,UAAU,uBAAhB,gCAAoE0C,EAAKM,OAAOC,WAChF,uBAAGjD,UAAU,4BAA4B0C,EAAKQ,aAC9C,uBAAGlD,UAAU,oBAAoBoB,KAAMsB,EAAKS,KAAK,GAAGxB,KAApD,qBAQZ,kBAAC,EAAD,W,GA1DUT,aCCEkC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB7B,MAAK,SAAA8B,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.40a89cb6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <>\r\n      <header className=\"header\">\r\n        <div className=\"wrapper\">\r\n          <h1 className=\"header__heading\">hero hunter</h1>\r\n        </div>\r\n      </header>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Header;","import React, { Component } from \"react\";\r\n\r\nclass Search extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      userInput: '',\r\n    };\r\n  }\r\n\r\n\r\n  //function attached to onChange on input element\r\n  handleChange = (e) => {\r\n    this.setState({\r\n    userInput: e.target.value,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"wrapper\">\r\n          <fieldset>\r\n            <legend className=\"sr-only\">Hero search field</legend>\r\n            <form className=\"form\">\r\n            <label htmlFor=\"search\">Search for a hero</label>\r\n            <input \r\n              className=\"form__input\"\r\n              onChange={this.handleChange} \r\n              type=\"search\" \r\n              name=\"search\" \r\n              id=\"search\" \r\n              value={this.state.userInput} />\r\n            <button \r\n              className=\"form__btn btn\"\r\n              onClick={(e) => this.props.getHeroes(e, this.state.userInput)} \r\n              type=\"submit\" \r\n            >Assemble!</button>\r\n          </form>\r\n          </fieldset>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Search;\r\n\r\n\r\n\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      <footer className=\"footer\">\r\n        <div className=\"footer__flex wrapper\">\r\n          <span className=\"footer__span\">\r\n            Created by Lucas Brake <a href=\"https://junocollege.com/\">@Juno College</a> using the MARVEL API\r\n          </span>\r\n\r\n          {/* Social media links  */}\r\n          <ul className=\"socials\">\r\n            <li>\r\n                <a href=\"https://twitter.com/Lucasbrake\" target=\"_blank\" rel=\"noopener noreferrer\"\r\n                  aria-label=\"visit me on twitter\">\r\n                  <i className=\"fab fa-twitter\"></i>\r\n                </a>\r\n            </li>\r\n            <li>\r\n                <a href=\"https://github.com/BrakeLJ\" target=\"_blank\" rel=\"noopener noreferrer\"\r\n                  aria-label=\"visit me on git hub\">\r\n                  <i className=\"fab fa-github\"></i>\r\n                </a>\r\n            </li>\r\n            <li>\r\n                <a href=\"https://www.linkedin.com/in/lucas-brake-b0803b57/\" target=\"_blank\" rel=\"noopener noreferrer\"\r\n                  aria-label=\"visit me on linked in\">\r\n                  <i className=\"fab fa-linkedin\"></i>\r\n                </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","//Imports\nimport React, { Component } from 'react';\nimport axios from 'axios'; \nimport './App.css';\n\n//Component imports\nimport Header from './components/Header';\nimport Search from \"./components/Search\";\nimport Footer from './components/Footer';\n\n//State declaration \nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      heroes: [],\n    }\n  }\n\n  //Axios call function (attached to button in Search.js)\n  getHeroes = (e, userInput) => {\n    e.preventDefault();\n    axios({\n      method: 'GET',\n      url: 'https://gateway.marvel.com/v1/public/characters',\n      dataResponse: 'json',\n      params: {\n        nameStartsWith: userInput, //userInput state lives in Search.js\n        ts: '12345678',\n        apikey: '74826c366b96b5cccf6669c19d47912b',\n        hash: '0893c180424f6ddf206200bc03297222',\n        limit: 100,\n      }})\n      .then(results => {\n          results = results.data.data.results;\n          this.setState({\n          heroes: results,\n      })\n      //error handling for no results\n      if (this.state.heroes.length  === 0) {\n      alert('Need to be a bit more specific. Try again true believer!')\n      }\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Header />\n        <Search getHeroes={this.getHeroes}/>\n        <div className=\"wrapper\">\n\n          <ul className=\"hero-result\">\n            {this.state.heroes.map((hero) => {\n              return(\n                <li key={hero.id} className=\"hero-result__card\">\n                  <img src={`${hero.thumbnail.path}/standard_fantastic.jpg`}  alt=\"portrait of \"/>\n                  <div className=\"hero-result__text-box\">\n                    <h2>{hero.name}</h2>\n                    <span className=\"hero-result__comics\"># of comics hero appears in: {hero.comics.available}</span>\n                    <p className=\"hero-result__description\">{hero.description}</p>\n                    <a className=\"hero-result__link\" href={hero.urls[1].url}>Learn More</a>\n                  </div>\n                </li>\n              )\n            })}\n          </ul>\n\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}